

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jan 15 03:42:59 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4520 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  00025E                     __pidataCOMRAM:
    58                           	opt stack 0
    59                           
    60                           ;initializer for _lolflag
    61  00025E  0026               	dw	38
    62                           
    63                           ;initializer for _i
    64  000260  0001               	dw	1
    65  0000                     _TMR1	set	4046
    66  0000                     _ADRESH	set	4036
    67  0000                     _ADRESL	set	4035
    68  0000                     _OSCCONbits	set	4051
    69  0000                     _T2CON	set	4042
    70  0000                     _CCP1CON	set	4029
    71  0000                     _T1CON	set	4045
    72  0000                     _INTCONbits	set	4082
    73  0000                     _RCONbits	set	4048
    74  0000                     _ADCON2bits	set	4032
    75  0000                     _TRISAbits	set	3986
    76  0000                     _ADCON0bits	set	4034
    77  0000                     _ADCON1bits	set	4033
    78  0000                     _IPR1bits	set	3999
    79  0000                     _PIE1bits	set	3997
    80  0000                     _PIR1bits	set	3998
    81  0000                     _RCSTAbits	set	4011
    82  0000                     _SPBRG	set	4015
    83  0000                     _TXSTAbits	set	4012
    84  0000                     _BAUDCONbits	set	4024
    85  0000                     _TRISDbits	set	3989
    86  0000                     _TRISCbits	set	3988
    87  0000                     _CCPR1L	set	4030
    88  0000                     _CCP1CONbits	set	4029
    89  0000                     _PR2	set	4043
    90  0000                     _TXREG	set	4013
    91  0000                     _RCREG	set	4014
    92  0000                     _TMR1IF	set	31984
    93  0000                     _TMR1IE	set	31976
    94                           
    95                           ; #config settings
    96  0000                     
    97                           	psect	cinit
    98  0001E2                     __pcinit:
    99                           	opt stack 0
   100  0001E2                     start_initialization:
   101                           	opt stack 0
   102  0001E2                     __initialization:
   103                           	opt stack 0
   104                           
   105                           ; Initialize objects allocated to COMRAM (4 bytes)
   106                           ; load TBLPTR registers with __pidataCOMRAM
   107  0001E2  0E5E               	movlw	low __pidataCOMRAM
   108  0001E4  6EF6               	movwf	tblptrl,c
   109  0001E6  0E02               	movlw	high __pidataCOMRAM
   110  0001E8  6EF7               	movwf	tblptrh,c
   111  0001EA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   112  0001EC  6EF8               	movwf	tblptru,c
   113  0001EE  EE00  F020         	lfsr	0,__pdataCOMRAM
   114  0001F2  EE10 F004          	lfsr	1,4
   115  0001F6                     copy_data0:
   116  0001F6  0009               	tblrd		*+
   117  0001F8  CFF5 FFEE          	movff	tablat,postinc0
   118  0001FC  50E5               	movf	postdec1,w,c
   119  0001FE  50E1               	movf	fsr1l,w,c
   120  000200  E1FA               	bnz	copy_data0
   121                           
   122                           ; Clear objects allocated to COMRAM (5 bytes)
   123  000202  6A1F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   124  000204  6A1E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   125  000206  6A1D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   126  000208  6A1C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   127  00020A  6A1B               	clrf	__pbssCOMRAM& (0+255),c
   128  00020C                     end_of_initialization:
   129                           	opt stack 0
   130  00020C                     __end_of__initialization:
   131                           	opt stack 0
   132  00020C  9024               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   133  00020E  9224               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   134  000210  0100               	movlb	0
   135  000212  EF1D  F001         	goto	_main	;jump to C main() function
   136                           tblptru	equ	0xFF8
   137                           tblptrh	equ	0xFF7
   138                           tblptrl	equ	0xFF6
   139                           tablat	equ	0xFF5
   140                           postinc0	equ	0xFEE
   141                           postdec1	equ	0xFE5
   142                           fsr1l	equ	0xFE1
   143                           
   144                           	psect	bssCOMRAM
   145  00001B                     __pbssCOMRAM:
   146                           	opt stack 0
   147  00001B                     _timersec:
   148                           	opt stack 0
   149  00001B                     	ds	2
   150  00001D                     _MyadcValue:
   151                           	opt stack 0
   152  00001D                     	ds	2
   153  00001F                     _global:
   154                           	opt stack 0
   155  00001F                     	ds	1
   156                           tblptru	equ	0xFF8
   157                           tblptrh	equ	0xFF7
   158                           tblptrl	equ	0xFF6
   159                           tablat	equ	0xFF5
   160                           postinc0	equ	0xFEE
   161                           postdec1	equ	0xFE5
   162                           fsr1l	equ	0xFE1
   163                           
   164                           	psect	dataCOMRAM
   165  000020                     __pdataCOMRAM:
   166                           	opt stack 0
   167  000020                     _lolflag:
   168                           	opt stack 0
   169  000020                     	ds	2
   170  000022                     _i:
   171                           	opt stack 0
   172  000022                     	ds	2
   173                           tblptru	equ	0xFF8
   174                           tblptrh	equ	0xFF7
   175                           tblptrl	equ	0xFF6
   176                           tablat	equ	0xFF5
   177                           postinc0	equ	0xFEE
   178                           postdec1	equ	0xFE5
   179                           fsr1l	equ	0xFE1
   180                           
   181                           	psect	cstackCOMRAM
   182  000001                     __pcstackCOMRAM:
   183                           	opt stack 0
   184  000001                     PWM1_Duty@duty:
   185                           	opt stack 0
   186                           
   187                           ; 2 bytes @ 0x0
   188  000001                     	ds	2
   189  000003                     ??_PWM1_Duty:
   190                           
   191                           ; 1 bytes @ 0x2
   192  000003                     	ds	2
   193  000005                     ??_wtf:
   194                           
   195                           ; 1 bytes @ 0x4
   196  000005                     	ds	18
   197  000017                     ??_MyadcRead:
   198  000017                     PWM1_Init@setDuty:
   199                           	opt stack 0
   200                           
   201                           ; 4 bytes @ 0x16
   202  000017                     	ds	4
   203  00001B                     tblptru	equ	0xFF8
   204                           tblptrh	equ	0xFF7
   205                           tblptrl	equ	0xFF6
   206                           tablat	equ	0xFF5
   207                           postinc0	equ	0xFEE
   208                           postdec1	equ	0xFE5
   209                           fsr1l	equ	0xFE1
   210                           
   211                           ; 1 bytes @ 0x1A
   212 ;;
   213 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   214 ;;
   215 ;; *************** function _main *****************
   216 ;; Defined at:
   217 ;;		line 123 in file "newmain.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;		None
   220 ;; Auto vars:     Size  Location     Type
   221 ;;		None
   222 ;; Return value:  Size  Location     Type
   223 ;;                  1    wreg      void 
   224 ;; Registers used:
   225 ;;		wreg, status,2, status,0, cstack
   226 ;; Tracked objects:
   227 ;;		On entry : 0/0
   228 ;;		On exit  : 0/0
   229 ;;		Unchanged: 0/0
   230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   231 ;;      Params:         0       0       0       0       0       0       0
   232 ;;      Locals:         0       0       0       0       0       0       0
   233 ;;      Temps:          0       0       0       0       0       0       0
   234 ;;      Totals:         0       0       0       0       0       0       0
   235 ;;Total ram usage:        0 bytes
   236 ;; Hardware stack levels required when called:    3
   237 ;; This function calls:
   238 ;;		_MyadcRead
   239 ;;		_PWM1_Init
   240 ;;		_PWM1_Start
   241 ;; This function is called by:
   242 ;;		Startup code after reset
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246                           	psect	text0
   247  00023A                     __ptext0:
   248                           	opt stack 0
   249  00023A                     _main:
   250                           	opt stack 28
   251                           
   252                           ;newmain.c: 125: PWM1_Init(155);
   253                           
   254                           ;incstack = 0
   255  00023A  0E9B               	movlw	155
   256  00023C  6E17               	movwf	PWM1_Init@setDuty,c
   257  00023E  0E00               	movlw	0
   258  000240  6E18               	movwf	PWM1_Init@setDuty+1,c
   259  000242  0E00               	movlw	0
   260  000244  6E19               	movwf	PWM1_Init@setDuty+2,c
   261  000246  0E00               	movlw	0
   262  000248  6E1A               	movwf	PWM1_Init@setDuty+3,c
   263  00024A  EC2C  F001         	call	_PWM1_Init	;wreg free
   264                           
   265                           ;newmain.c: 126: PWM1_Start();
   266  00024E  EC91  F000         	call	_PWM1_Start	;wreg free
   267  000252                     
   268                           ;newmain.c: 129: MyadcRead();
   269  000252  EC0B  F001         	call	_MyadcRead	;wreg free
   270  000256  D7FD               	goto	l94
   271  000258                     __end_of_main:
   272                           	opt stack 0
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           tblptrl	equ	0xFF6
   276                           tablat	equ	0xFF5
   277                           postinc0	equ	0xFEE
   278                           postdec1	equ	0xFE5
   279                           fsr1l	equ	0xFE1
   280                           
   281 ;; *************** function _PWM1_Start *****************
   282 ;; Defined at:
   283 ;;		line 45 in file "newmain.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  2   82[None  ] int 
   290 ;; Registers used:
   291 ;;		wreg, status,2
   292 ;; Tracked objects:
   293 ;;		On entry : 0/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   297 ;;      Params:         0       0       0       0       0       0       0
   298 ;;      Locals:         0       0       0       0       0       0       0
   299 ;;      Temps:          0       0       0       0       0       0       0
   300 ;;      Totals:         0       0       0       0       0       0       0
   301 ;;Total ram usage:        0 bytes
   302 ;; Hardware stack levels used:    1
   303 ;; Hardware stack levels required when called:    2
   304 ;; This function calls:
   305 ;;		Nothing
   306 ;; This function is called by:
   307 ;;		_main
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           	psect	text1
   312  000122                     __ptext1:
   313                           	opt stack 0
   314  000122                     _PWM1_Start:
   315                           	opt stack 28
   316                           
   317                           ;newmain.c: 47: TRISCbits.TRISC6 = 1;
   318                           
   319                           ;incstack = 0
   320  000122  8C94               	bsf	3988,6,c	;volatile
   321                           
   322                           ;newmain.c: 48: TRISCbits.TRISC7 = 1;
   323  000124  8E94               	bsf	3988,7,c	;volatile
   324                           
   325                           ;newmain.c: 49: TRISDbits.RD0 = 0;
   326  000126  9095               	bcf	3989,0,c	;volatile
   327                           
   328                           ;newmain.c: 50: TRISDbits.RD1 = 0;
   329  000128  9295               	bcf	3989,1,c	;volatile
   330                           
   331                           ;newmain.c: 61: BAUDCONbits.BRG16 = 1 ;
   332  00012A  86B8               	bsf	4024,3,c	;volatile
   333                           
   334                           ;newmain.c: 62: TXSTAbits.BRGH = 1;
   335  00012C  84AC               	bsf	4012,2,c	;volatile
   336                           
   337                           ;newmain.c: 63: SPBRG = 25;
   338  00012E  0E19               	movlw	25
   339  000130  6EAF               	movwf	4015,c	;volatile
   340                           
   341                           ;newmain.c: 66: TXSTAbits.SYNC = 0;
   342  000132  98AC               	bcf	4012,4,c	;volatile
   343                           
   344                           ;newmain.c: 67: RCSTAbits.SPEN = 1;
   345  000134  8EAB               	bsf	4011,7,c	;volatile
   346                           
   347                           ;newmain.c: 70: PIR1bits.TXIF = 1;
   348  000136  889E               	bsf	3998,4,c	;volatile
   349                           
   350                           ;newmain.c: 71: PIR1bits.RCIF = 0;
   351  000138  9A9E               	bcf	3998,5,c	;volatile
   352                           
   353                           ;newmain.c: 72: TXSTAbits.TXEN = 1;
   354  00013A  8AAC               	bsf	4012,5,c	;volatile
   355                           
   356                           ;newmain.c: 73: RCSTAbits.CREN = 1;
   357  00013C  88AB               	bsf	4011,4,c	;volatile
   358                           
   359                           ;newmain.c: 75: PIE1bits.TXIE = 1;
   360  00013E  889D               	bsf	3997,4,c	;volatile
   361                           
   362                           ;newmain.c: 76: IPR1bits.TXIP = 1;
   363  000140  889F               	bsf	3999,4,c	;volatile
   364                           
   365                           ;newmain.c: 77: PIE1bits.RCIE = 1;
   366  000142  8A9D               	bsf	3997,5,c	;volatile
   367                           
   368                           ;newmain.c: 78: IPR1bits.RCIP = 1;
   369  000144  8A9F               	bsf	3999,5,c	;volatile
   370                           
   371                           ;newmain.c: 81: ADCON1bits.VCFG1 = 0 ;
   372  000146  9AC1               	bcf	4033,5,c	;volatile
   373                           
   374                           ;newmain.c: 82: ADCON1bits.VCFG0 = 0 ;
   375  000148  98C1               	bcf	4033,4,c	;volatile
   376                           
   377                           ;newmain.c: 83: ADCON1bits.PCFG = 1;
   378  00014A  50C1               	movf	4033,w,c	;volatile
   379  00014C  0BF0               	andlw	-16
   380  00014E  0901               	iorlw	1
   381  000150  6EC1               	movwf	4033,c	;volatile
   382                           
   383                           ;newmain.c: 84: ADCON0bits.CHS = 0 ;
   384  000152  94C2               	bcf	4034,2,c	;volatile
   385  000154  96C2               	bcf	4034,3,c	;volatile
   386  000156  98C2               	bcf	4034,4,c	;volatile
   387  000158  9AC2               	bcf	4034,5,c	;volatile
   388                           
   389                           ;newmain.c: 85: TRISAbits.RA0 = 1 ;
   390  00015A  8092               	bsf	3986,0,c	;volatile
   391                           
   392                           ;newmain.c: 86: ADCON2bits.ADFM = 1 ;
   393  00015C  8EC0               	bsf	4032,7,c	;volatile
   394                           
   395                           ;newmain.c: 88: ADCON2bits.ACQT = 1;
   396  00015E  50C0               	movf	4032,w,c	;volatile
   397  000160  0BC7               	andlw	-57
   398  000162  0908               	iorlw	8
   399  000164  6EC0               	movwf	4032,c	;volatile
   400                           
   401                           ;newmain.c: 89: ADCON2bits.ADCS = 0;
   402  000166  90C0               	bcf	4032,0,c	;volatile
   403  000168  92C0               	bcf	4032,1,c	;volatile
   404  00016A  94C0               	bcf	4032,2,c	;volatile
   405                           
   406                           ;newmain.c: 90: ADCON0bits.ADON = 1;
   407  00016C  80C2               	bsf	4034,0,c	;volatile
   408                           
   409                           ;newmain.c: 92: RCONbits.IPEN=0x01;
   410  00016E  8ED0               	bsf	4048,7,c	;volatile
   411                           
   412                           ;newmain.c: 93: INTCONbits.GIEH = 1;
   413  000170  8EF2               	bsf	intcon,7,c	;volatile
   414                           
   415                           ;newmain.c: 94: INTCONbits.GIEL = 1;
   416  000172  8CF2               	bsf	intcon,6,c	;volatile
   417                           
   418                           ;newmain.c: 97: T1CON = 0x95;
   419  000174  0E95               	movlw	149
   420  000176  6ECD               	movwf	4045,c	;volatile
   421                           
   422                           ;newmain.c: 98: CCP1CON = 0b00001100;
   423  000178  0E0C               	movlw	12
   424  00017A  6EBD               	movwf	4029,c	;volatile
   425                           
   426                           ;newmain.c: 99: T2CON = 0x07;
   427  00017C  0E07               	movlw	7
   428  00017E  6ECA               	movwf	4042,c	;volatile
   429                           
   430                           ;newmain.c: 101: OSCCONbits.IRCF2 = 1;
   431  000180  8CD3               	bsf	4051,6,c	;volatile
   432                           
   433                           ;newmain.c: 102: OSCCONbits.IRCF1 = 0;
   434  000182  9AD3               	bcf	4051,5,c	;volatile
   435                           
   436                           ;newmain.c: 103: OSCCONbits.IRCF0 = 0;
   437  000184  98D3               	bcf	4051,4,c	;volatile
   438                           
   439                           ;newmain.c: 104: TRISCbits.RC2 = 0;
   440  000186  9494               	bcf	3988,2,c	;volatile
   441                           
   442                           ;newmain.c: 106: PIE1bits.TMR1IE=1;
   443  000188  809D               	bsf	3997,0,c	;volatile
   444                           
   445                           ;newmain.c: 107: IPR1bits.TMR1IP=1;
   446  00018A  809F               	bsf	3999,0,c	;volatile
   447                           
   448                           ;newmain.c: 108: PIR1bits.TMR1IF=0;
   449  00018C  909E               	bcf	3998,0,c	;volatile
   450                           
   451                           ;newmain.c: 110: TMR1 = 3035;
   452  00018E  0E0B               	movlw	11
   453  000190  6ECF               	movwf	4047,c	;volatile
   454  000192  0EDB               	movlw	219
   455  000194  6ECE               	movwf	4046,c	;volatile
   456  000196  0012               	return		;funcret
   457  000198                     __end_of_PWM1_Start:
   458                           	opt stack 0
   459                           tblptru	equ	0xFF8
   460                           tblptrh	equ	0xFF7
   461                           tblptrl	equ	0xFF6
   462                           tablat	equ	0xFF5
   463                           intcon	equ	0xFF2
   464                           postinc0	equ	0xFEE
   465                           postdec1	equ	0xFE5
   466                           fsr1l	equ	0xFE1
   467                           
   468 ;; *************** function _PWM1_Init *****************
   469 ;; Defined at:
   470 ;;		line 32 in file "newmain.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;  setDuty         4   22[COMRAM] long 
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  2   22[COMRAM] int 
   477 ;; Registers used:
   478 ;;		None
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   484 ;;      Params:         4       0       0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0       0       0
   486 ;;      Temps:          0       0       0       0       0       0       0
   487 ;;      Totals:         4       0       0       0       0       0       0
   488 ;;Total ram usage:        4 bytes
   489 ;; Hardware stack levels used:    1
   490 ;; Hardware stack levels required when called:    2
   491 ;; This function calls:
   492 ;;		Nothing
   493 ;; This function is called by:
   494 ;;		_main
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           	psect	text2
   499  000258                     __ptext2:
   500                           	opt stack 0
   501  000258                     _PWM1_Init:
   502                           	opt stack 28
   503                           
   504                           ;newmain.c: 34: PR2 = setDuty;
   505                           
   506                           ;incstack = 0
   507  000258  C017  FFCB         	movff	PWM1_Init@setDuty,4043	;volatile
   508  00025C  0012               	return		;funcret
   509  00025E                     __end_of_PWM1_Init:
   510                           	opt stack 0
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           intcon	equ	0xFF2
   516                           postinc0	equ	0xFEE
   517                           postdec1	equ	0xFE5
   518                           fsr1l	equ	0xFE1
   519                           
   520 ;; *************** function _MyadcRead *****************
   521 ;; Defined at:
   522 ;;		line 113 in file "newmain.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   536 ;;      Params:         0       0       0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0       0       0
   538 ;;      Temps:          3       0       0       0       0       0       0
   539 ;;      Totals:         3       0       0       0       0       0       0
   540 ;;Total ram usage:        3 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    2
   543 ;; This function calls:
   544 ;;		Nothing
   545 ;; This function is called by:
   546 ;;		_main
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           	psect	text3
   551  000216                     __ptext3:
   552                           	opt stack 0
   553  000216                     _MyadcRead:
   554                           	opt stack 28
   555                           
   556                           ;newmain.c: 115: while(ADCON0bits.GO == 1);
   557                           
   558                           ;incstack = 0
   559  000216  B2C2               	btfsc	4034,1,c	;volatile
   560  000218  D7FE               	goto	_MyadcRead
   561                           
   562                           ;newmain.c: 116: ADCON0bits.GO = 1;
   563  00021A  82C2               	bsf	4034,1,c	;volatile
   564                           
   565                           ;newmain.c: 117: MyadcValue = ADRESL;
   566  00021C  CFC3 F01D          	movff	4035,_MyadcValue	;volatile
   567  000220  6A1E               	clrf	_MyadcValue+1,c
   568                           
   569                           ;newmain.c: 118: MyadcValue |= (ADRESH & 3) << 8;
   570  000222  CFC4 F017          	movff	4036,??_MyadcRead	;volatile
   571  000226  0E03               	movlw	3
   572  000228  1617               	andwf	??_MyadcRead,f,c
   573  00022A  5017               	movf	??_MyadcRead,w,c
   574  00022C  6E19               	movwf	(??_MyadcRead+2)& (0+255),c
   575  00022E  6A18               	clrf	(??_MyadcRead+1)& (0+255),c
   576  000230  5018               	movf	??_MyadcRead+1,w,c
   577  000232  121D               	iorwf	_MyadcValue,f,c
   578  000234  5019               	movf	??_MyadcRead+2,w,c
   579  000236  121E               	iorwf	_MyadcValue+1,f,c
   580  000238  0012               	return	
   581  00023A                     __end_of_MyadcRead:
   582                           	opt stack 0
   583                           tblptru	equ	0xFF8
   584                           tblptrh	equ	0xFF7
   585                           tblptrl	equ	0xFF6
   586                           tablat	equ	0xFF5
   587                           intcon	equ	0xFF2
   588                           postinc0	equ	0xFEE
   589                           postdec1	equ	0xFE5
   590                           fsr1l	equ	0xFE1
   591                           
   592 ;; *************** function _wtf *****************
   593 ;; Defined at:
   594 ;;		line 133 in file "newmain.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;		None
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, status,2, status,0, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   608 ;;      Params:         0       0       0       0       0       0       0
   609 ;;      Locals:         0       0       0       0       0       0       0
   610 ;;      Temps:         18       0       0       0       0       0       0
   611 ;;      Totals:        18       0       0       0       0       0       0
   612 ;;Total ram usage:       18 bytes
   613 ;; Hardware stack levels used:    1
   614 ;; Hardware stack levels required when called:    1
   615 ;; This function calls:
   616 ;;		_PWM1_Duty
   617 ;; This function is called by:
   618 ;;		Interrupt level 2
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           	psect	intcode
   623  000008                     __pintcode:
   624                           	opt stack 0
   625  000008                     _wtf:
   626                           	opt stack 28
   627                           
   628                           ;incstack = 0
   629  000008  8224               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   630  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   631                           tblptru	equ	0xFF8
   632                           tblptrh	equ	0xFF7
   633                           tblptrl	equ	0xFF6
   634                           tablat	equ	0xFF5
   635                           intcon	equ	0xFF2
   636                           postinc0	equ	0xFEE
   637                           postdec1	equ	0xFE5
   638                           fsr1l	equ	0xFE1
   639                           
   640                           	psect	intcode_body
   641  000012                     __pintcode_body:
   642                           	opt stack 28
   643  000012                     int_func:
   644                           	opt stack 28
   645  000012  0006               	pop		; remove dummy address from shadow register refresh
   646  000014  CFFA F005          	movff	pclath,??_wtf
   647  000018  CFFB F006          	movff	pclatu,??_wtf+1
   648  00001C  CFE9 F007          	movff	fsr0l,??_wtf+2
   649  000020  CFEA F008          	movff	fsr0h,??_wtf+3
   650  000024  CFE1 F009          	movff	fsr1l,??_wtf+4
   651  000028  CFE2 F00A          	movff	fsr1h,??_wtf+5
   652  00002C  CFD9 F00B          	movff	fsr2l,??_wtf+6
   653  000030  CFDA F00C          	movff	fsr2h,??_wtf+7
   654  000034  CFF3 F00D          	movff	prodl,??_wtf+8
   655  000038  CFF4 F00E          	movff	prodh,??_wtf+9
   656  00003C  CFF6 F00F          	movff	tblptrl,??_wtf+10
   657  000040  CFF7 F010          	movff	tblptrh,??_wtf+11
   658  000044  CFF8 F011          	movff	tblptru,??_wtf+12
   659  000048  CFF5 F012          	movff	tablat,??_wtf+13
   660  00004C  C024  F013         	movff	btemp,??_wtf+14
   661  000050  C025  F014         	movff	btemp+1,??_wtf+15
   662  000054  C026  F015         	movff	btemp+2,??_wtf+16
   663  000058  C027  F016         	movff	btemp+3,??_wtf+17
   664                           
   665                           ;newmain.c: 135: if(TMR1IE && TMR1IF && timersec ){
   666  00005C  B09D               	btfsc	3997,0,c	;volatile
   667  00005E  A09E               	btfss	3998,0,c	;volatile
   668  000060  D02E               	goto	i2l102
   669  000062  501B               	movf	_timersec,w,c
   670  000064  101C               	iorwf	_timersec+1,w,c
   671  000066  B4D8               	btfsc	status,2,c
   672  000068  D02A               	goto	i2l102
   673                           
   674                           ;newmain.c: 136: TMR1 = 3035;
   675  00006A  0E0B               	movlw	11
   676  00006C  6ECF               	movwf	4047,c	;volatile
   677  00006E  0EDB               	movlw	219
   678  000070  6ECE               	movwf	4046,c	;volatile
   679                           
   680                           ;newmain.c: 137: if( i > 600 ) lolflag = -38;
   681  000072  BE23               	btfsc	_i+1,7,c
   682  000074  D00A               	goto	i2l103
   683  000076  0E59               	movlw	89
   684  000078  5C22               	subwf	_i,w,c
   685  00007A  0E02               	movlw	2
   686  00007C  5823               	subwfb	_i+1,w,c
   687  00007E  A0D8               	btfss	status,0,c
   688  000080  D004               	goto	i2l103
   689  000082  0EFF               	movlw	255
   690  000084  6E21               	movwf	_lolflag+1,c
   691  000086  0EDA               	movlw	218
   692  000088  D00E               	goto	L1
   693  00008A                     i2l103:
   694                           
   695                           ;newmain.c: 138: else if( i < 1) {
   696  00008A  BE23               	btfsc	_i+1,7,c
   697  00008C  D005               	goto	i2u12_40
   698  00008E  5023               	movf	_i+1,w,c
   699  000090  E10B               	bnz	i2l858
   700  000092  0422               	decf	_i,w,c
   701  000094  B0D8               	btfsc	status,0,c
   702  000096  D008               	goto	i2l105
   703  000098                     i2u12_40:
   704                           
   705                           ;newmain.c: 139: i = 1;
   706  000098  0E00               	movlw	0
   707  00009A  6E23               	movwf	_i+1,c
   708  00009C  0E01               	movlw	1
   709  00009E  6E22               	movwf	_i,c
   710                           
   711                           ;newmain.c: 140: lolflag = 38;
   712  0000A0  0E00               	movlw	0
   713  0000A2  6E21               	movwf	_lolflag+1,c
   714  0000A4  0E26               	movlw	38
   715  0000A6                     L1:
   716  0000A6  6E20               	movwf	_lolflag,c
   717  0000A8                     i2l105:
   718  0000A8                     i2l858:
   719                           
   720                           ;newmain.c: 141: }
   721                           ;newmain.c: 142: PWM1_Duty(i);
   722  0000A8  C022  F001         	movff	_i,PWM1_Duty@duty
   723  0000AC  C023  F002         	movff	_i+1,PWM1_Duty@duty+1
   724  0000B0  ECCC  F000         	call	_PWM1_Duty	;wreg free
   725                           
   726                           ;newmain.c: 144: i += lolflag;
   727  0000B4  5020               	movf	_lolflag,w,c
   728  0000B6  2622               	addwf	_i,f,c
   729  0000B8  5021               	movf	_lolflag+1,w,c
   730  0000BA  2223               	addwfc	_i+1,f,c
   731                           
   732                           ;newmain.c: 145: TMR1IF = 0;
   733  0000BC  909E               	bcf	3998,0,c	;volatile
   734  0000BE                     i2l102:
   735                           
   736                           ;newmain.c: 146: }
   737                           ;newmain.c: 171: if(timersec == 0) timersec = 1;
   738  0000BE  501B               	movf	_timersec,w,c
   739  0000C0  101C               	iorwf	_timersec+1,w,c
   740  0000C2  A4D8               	btfss	status,2,c
   741  0000C4  D004               	goto	i2l106
   742  0000C6  0E00               	movlw	0
   743  0000C8  6E1C               	movwf	_timersec+1,c
   744  0000CA  0E01               	movlw	1
   745  0000CC  D003               	goto	L2
   746  0000CE                     i2l106:
   747                           
   748                           ;newmain.c: 172: else timersec = 0;
   749  0000CE  0E00               	movlw	0
   750  0000D0  6E1C               	movwf	_timersec+1,c
   751  0000D2  0E00               	movlw	0
   752  0000D4                     L2:
   753  0000D4  6E1B               	movwf	_timersec,c
   754  0000D6  C016  F027         	movff	??_wtf+17,btemp+3
   755  0000DA  C015  F026         	movff	??_wtf+16,btemp+2
   756  0000DE  C014  F025         	movff	??_wtf+15,btemp+1
   757  0000E2  C013  F024         	movff	??_wtf+14,btemp
   758  0000E6  C012  FFF5         	movff	??_wtf+13,tablat
   759  0000EA  C011  FFF8         	movff	??_wtf+12,tblptru
   760  0000EE  C010  FFF7         	movff	??_wtf+11,tblptrh
   761  0000F2  C00F  FFF6         	movff	??_wtf+10,tblptrl
   762  0000F6  C00E  FFF4         	movff	??_wtf+9,prodh
   763  0000FA  C00D  FFF3         	movff	??_wtf+8,prodl
   764  0000FE  C00C  FFDA         	movff	??_wtf+7,fsr2h
   765  000102  C00B  FFD9         	movff	??_wtf+6,fsr2l
   766  000106  C00A  FFE2         	movff	??_wtf+5,fsr1h
   767  00010A  C009  FFE1         	movff	??_wtf+4,fsr1l
   768  00010E  C008  FFEA         	movff	??_wtf+3,fsr0h
   769  000112  C007  FFE9         	movff	??_wtf+2,fsr0l
   770  000116  C006  FFFB         	movff	??_wtf+1,pclatu
   771  00011A  C005  FFFA         	movff	??_wtf,pclath
   772  00011E  9224               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   773  000120  0011               	retfie		f
   774  000122                     __end_of_wtf:
   775                           	opt stack 0
   776                           pclatu	equ	0xFFB
   777                           pclath	equ	0xFFA
   778                           tblptru	equ	0xFF8
   779                           tblptrh	equ	0xFF7
   780                           tblptrl	equ	0xFF6
   781                           tablat	equ	0xFF5
   782                           prodh	equ	0xFF4
   783                           prodl	equ	0xFF3
   784                           intcon	equ	0xFF2
   785                           postinc0	equ	0xFEE
   786                           fsr0h	equ	0xFEA
   787                           fsr0l	equ	0xFE9
   788                           postdec1	equ	0xFE5
   789                           fsr1h	equ	0xFE2
   790                           fsr1l	equ	0xFE1
   791                           fsr2h	equ	0xFDA
   792                           fsr2l	equ	0xFD9
   793                           status	equ	0xFD8
   794                           
   795 ;; *************** function _PWM1_Duty *****************
   796 ;; Defined at:
   797 ;;		line 37 in file "newmain.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  duty            2    0[COMRAM] unsigned int 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  2    0[COMRAM] int 
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   811 ;;      Params:         2       0       0       0       0       0       0
   812 ;;      Locals:         0       0       0       0       0       0       0
   813 ;;      Temps:          2       0       0       0       0       0       0
   814 ;;      Totals:         4       0       0       0       0       0       0
   815 ;;Total ram usage:        4 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_wtf
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text5
   825  000198                     __ptext5:
   826                           	opt stack 0
   827  000198                     _PWM1_Duty:
   828                           	opt stack 28
   829                           
   830                           ;newmain.c: 40: CCP1CONbits.CCP1X = (duty >> 1) & 1;
   831                           
   832                           ;incstack = 0
   833  000198  90D8               	bcf	status,0,c
   834  00019A  3002               	rrcf	PWM1_Duty@duty+1,w,c
   835  00019C  6E04               	movwf	(??_PWM1_Duty+1)& (0+255),c
   836  00019E  3001               	rrcf	PWM1_Duty@duty,w,c
   837  0001A0  6E03               	movwf	??_PWM1_Duty& (0+255),c
   838  0001A2  0E01               	movlw	1
   839  0001A4  1603               	andwf	??_PWM1_Duty,f,c
   840  0001A6  3A03               	swapf	??_PWM1_Duty,f,c
   841  0001A8  4603               	rlncf	??_PWM1_Duty,f,c
   842  0001AA  50BD               	movf	4029,w,c	;volatile
   843  0001AC  1803               	xorwf	??_PWM1_Duty,w,c
   844  0001AE  0BDF               	andlw	-33
   845  0001B0  1803               	xorwf	??_PWM1_Duty,w,c
   846  0001B2  6EBD               	movwf	4029,c	;volatile
   847                           
   848                           ;newmain.c: 41: CCP1CONbits.CCP1Y = duty & 1;
   849  0001B4  C001  F003         	movff	PWM1_Duty@duty,??_PWM1_Duty
   850  0001B8  0E01               	movlw	1
   851  0001BA  1603               	andwf	??_PWM1_Duty,f,c
   852  0001BC  3A03               	swapf	??_PWM1_Duty,f,c
   853  0001BE  50BD               	movf	4029,w,c	;volatile
   854  0001C0  1803               	xorwf	??_PWM1_Duty,w,c
   855  0001C2  0BEF               	andlw	-17
   856  0001C4  1803               	xorwf	??_PWM1_Duty,w,c
   857  0001C6  6EBD               	movwf	4029,c	;volatile
   858                           
   859                           ;newmain.c: 42: CCPR1L = duty >> 2;
   860  0001C8  C001  F003         	movff	PWM1_Duty@duty,??_PWM1_Duty
   861  0001CC  C002  F004         	movff	PWM1_Duty@duty+1,??_PWM1_Duty+1
   862  0001D0  90D8               	bcf	status,0,c
   863  0001D2  3204               	rrcf	??_PWM1_Duty+1,f,c
   864  0001D4  3203               	rrcf	??_PWM1_Duty,f,c
   865  0001D6  90D8               	bcf	status,0,c
   866  0001D8  3204               	rrcf	??_PWM1_Duty+1,f,c
   867  0001DA  3203               	rrcf	??_PWM1_Duty,f,c
   868  0001DC  5003               	movf	??_PWM1_Duty,w,c
   869  0001DE  6EBE               	movwf	4030,c	;volatile
   870  0001E0  0012               	return		;funcret
   871  0001E2                     __end_of_PWM1_Duty:
   872                           	opt stack 0
   873  0000                     pclatu	equ	0xFFB
   874                           pclath	equ	0xFFA
   875                           tblptru	equ	0xFF8
   876                           tblptrh	equ	0xFF7
   877                           tblptrl	equ	0xFF6
   878                           tablat	equ	0xFF5
   879                           prodh	equ	0xFF4
   880                           prodl	equ	0xFF3
   881                           intcon	equ	0xFF2
   882                           postinc0	equ	0xFEE
   883                           fsr0h	equ	0xFEA
   884                           fsr0l	equ	0xFE9
   885                           postdec1	equ	0xFE5
   886                           fsr1h	equ	0xFE2
   887                           fsr1l	equ	0xFE1
   888                           fsr2h	equ	0xFDA
   889                           fsr2l	equ	0xFD9
   890                           status	equ	0xFD8
   891                           pclatu	equ	0xFFB
   892                           pclath	equ	0xFFA
   893                           tblptru	equ	0xFF8
   894                           tblptrh	equ	0xFF7
   895                           tblptrl	equ	0xFF6
   896                           tablat	equ	0xFF5
   897                           prodh	equ	0xFF4
   898                           prodl	equ	0xFF3
   899                           intcon	equ	0xFF2
   900                           postinc0	equ	0xFEE
   901                           fsr0h	equ	0xFEA
   902                           fsr0l	equ	0xFE9
   903                           postdec1	equ	0xFE5
   904                           fsr1h	equ	0xFE2
   905                           fsr1l	equ	0xFE1
   906                           fsr2h	equ	0xFDA
   907                           fsr2l	equ	0xFD9
   908                           status	equ	0xFD8
   909                           
   910                           	psect	rparam
   911  0000                     pclatu	equ	0xFFB
   912                           pclath	equ	0xFFA
   913                           tblptru	equ	0xFF8
   914                           tblptrh	equ	0xFF7
   915                           tblptrl	equ	0xFF6
   916                           tablat	equ	0xFF5
   917                           prodh	equ	0xFF4
   918                           prodl	equ	0xFF3
   919                           intcon	equ	0xFF2
   920                           postinc0	equ	0xFEE
   921                           fsr0h	equ	0xFEA
   922                           fsr0l	equ	0xFE9
   923                           postdec1	equ	0xFE5
   924                           fsr1h	equ	0xFE2
   925                           fsr1l	equ	0xFE1
   926                           fsr2h	equ	0xFDA
   927                           fsr2l	equ	0xFD9
   928                           status	equ	0xFD8
   929                           
   930                           	psect	temp
   931  000024                     btemp:
   932                           	opt stack 0
   933  000024                     	ds	1
   934  0000                     int$flags	set	btemp
   935  0000                     wtemp6	set	btemp+1
   936                           pclatu	equ	0xFFB
   937                           pclath	equ	0xFFA
   938                           tblptru	equ	0xFF8
   939                           tblptrh	equ	0xFF7
   940                           tblptrl	equ	0xFF6
   941                           tablat	equ	0xFF5
   942                           prodh	equ	0xFF4
   943                           prodl	equ	0xFF3
   944                           intcon	equ	0xFF2
   945                           postinc0	equ	0xFEE
   946                           fsr0h	equ	0xFEA
   947                           fsr0l	equ	0xFE9
   948                           postdec1	equ	0xFE5
   949                           fsr1h	equ	0xFE2
   950                           fsr1l	equ	0xFE1
   951                           fsr2h	equ	0xFDA
   952                           fsr2l	equ	0xFD9
   953                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     26      35
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PWM1_Init

Critical Paths under _wtf in COMRAM

    _wtf->_PWM1_Duty

Critical Paths under _main in BANK0

    None.

Critical Paths under _wtf in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _wtf in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _wtf in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _wtf in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _wtf in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _wtf in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      98
                          _MyadcRead
                          _PWM1_Init
                         _PWM1_Start
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            4     0      4      98
                                             22 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _MyadcRead                                            3     3      0       0
                                             22 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _wtf                                                 18    18      0     142
                                              4 COMRAM    18    18      0
                          _PWM1_Duty
 ---------------------------------------------------------------------------------
 (3) _PWM1_Duty                                            4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MyadcRead
   _PWM1_Init
   _PWM1_Start

 _wtf (ROOT)
   _PWM1_Duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1A      23       1       27.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      15        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jan 15 03:42:59 2018

                      _i 0022                       l94 0252                      _PR2 000FCB  
           __CFG_CPD$OFF 000000                      _wtf 0008             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     ?_wtf 0001                     _TMR1 000FCE  
                   _main 023A                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0024            __CFG_BOREN$ON 000000  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
           ___param_bank 000000                    ??_wtf 0005                    ?_main 0001  
                  _T1CON 000FCD                    _T2CON 000FCA                    i2l102 00BE  
                  i2l103 008A                    i2l105 00A8                    i2l106 00CE  
                  i2l858 00A8                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _TXREG 000FAD            __CFG_PWRT$OFF 000000       __size_of_PWM1_Init 0006  
     __size_of_PWM1_Duty 004A              ?_PWM1_Start 0001                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8                    wtemp6 0025  
        __initialization 01E2             __end_of_main 0258                   ??_main 001B  
          __activetblptr 000000                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR1L 000FBE                   _TMR1IE 007CE8                   _TMR1IF 007CF0  
             _MyadcValue 001D        __end_of_PWM1_Init 025E        __end_of_PWM1_Duty 01E2  
    __size_of_PWM1_Start 0076       __size_of_MyadcRead 0024                   _global 001F  
           __pdataCOMRAM 0020                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0080  __end_of__initialization 020C  
          ___rparam_used 000001           __pcstackCOMRAM 0001        __end_of_MyadcRead 023A  
                _CCP1CON 000FBD                  i2u12_40 0098             ??_PWM1_Start 0017  
                __Hparam 0000                  __Lparam 0000       __end_of_PWM1_Start 0198  
                __pcinit 01E2                  __ramtop 0600                  __ptext0 023A  
                __ptext1 0122                  __ptext2 0258                  __ptext3 0216  
                __ptext5 0198             __size_of_wtf 011A                  _lolflag 0020  
         __pintcode_body 0012     end_of_initialization 020C                  int_func 0012  
              _RCSTAbits 000FAB                  postdec1 000FE5                  postinc0 000FEE  
              _PWM1_Init 0258                _PWM1_Duty 0198                _TRISAbits 000F92  
              _TRISCbits 000F94                _TRISDbits 000F95              _CCP1CONbits 000FBD  
              _TXSTAbits 000FAC              _BAUDCONbits 000FB8            __pidataCOMRAM 025E  
             ?_PWM1_Init 0017               ?_PWM1_Duty 0001      start_initialization 01E2  
            __end_of_wtf 0122         __CFG_OSC$INTIO67 000000                _MyadcRead 0216  
            __pbssCOMRAM 001B               ?_MyadcRead 0001                __pintcode 0008  
            ??_PWM1_Init 001B              ??_PWM1_Duty 0003                 _IPR1bits 000F9F  
               _PIE1bits 000F9D                 _PIR1bits 000F9E            PWM1_Duty@duty 0001  
               _RCONbits 000FD0               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0                copy_data0 01F6              ??_MyadcRead 0017  
               __Hrparam 0000         PWM1_Init@setDuty 0017                 __Lrparam 0000  
          __size_of_main 001E                 _timersec 001B                 int$flags 0024  
             _INTCONbits 000FF2                 intlevel2 0000               _OSCCONbits 000FD3  
             _PWM1_Start 0122  
