

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Thu Dec 14 18:08:13 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           ; Version 1.43
    26                           ; Generated 25/07/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4520 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	idataCOMRAM
    61  00020E                     __pidataCOMRAM:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _mystring
    65  00020E  61                 	db	97
    66  00020F  61                 	db	97
    67  000210  61                 	db	97
    68  000211  61                 	db	97
    69  000212  61                 	db	97
    70  000213  61                 	db	97
    71  000214  61                 	db	97
    72  000215  61                 	db	97
    73                           
    74                           	psect	nvCOMRAM
    75  000036                     __pnvCOMRAM:
    76                           	opt stack 0
    77  000036                     _global:
    78                           	opt stack 0
    79  000036                     	ds	1
    80  0000                     _LATDbits	set	3980
    81  0000                     _TRISDbits	set	3989
    82  0000                     _TRISCbits	set	3988
    83  0000                     _IPR1bits	set	3999
    84  0000                     _PIE1bits	set	3997
    85  0000                     _PIR1bits	set	3998
    86  0000                     _RCSTAbits	set	4011
    87  0000                     _SPBRG	set	4015
    88  0000                     _TXSTAbits	set	4012
    89  0000                     _BAUDCONbits	set	4024
    90  0000                     _OSCCONbits	set	4051
    91  0000                     _TXREG	set	4013
    92  0000                     _RCREG	set	4014
    93  0000                     _RCONbits	set	4048
    94  0000                     _RCIF	set	31989
    95  0000                     _INTCONbits	set	4082
    96                           
    97                           ; #config settings
    98  0000                     
    99                           	psect	cinit
   100  000196                     __pcinit:
   101                           	opt stack 0
   102  000196                     start_initialization:
   103                           	opt stack 0
   104  000196                     __initialization:
   105                           	opt stack 0
   106                           
   107                           ; Initialize objects allocated to COMRAM (8 bytes)
   108                           ; load TBLPTR registers with __pidataCOMRAM
   109  000196  0E0E               	movlw	low __pidataCOMRAM
   110  000198  6EF6               	movwf	tblptrl,c
   111  00019A  0E02               	movlw	high __pidataCOMRAM
   112  00019C  6EF7               	movwf	tblptrh,c
   113  00019E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   114  0001A0  6EF8               	movwf	tblptru,c
   115  0001A2  EE00  F02C         	lfsr	0,__pdataCOMRAM
   116  0001A6  EE10 F008          	lfsr	1,8
   117  0001AA                     copy_data0:
   118  0001AA  0009               	tblrd		*+
   119  0001AC  CFF5 FFEE          	movff	tablat,postinc0
   120  0001B0  50E5               	movf	postdec1,w,c
   121  0001B2  50E1               	movf	fsr1l,w,c
   122  0001B4  E1FA               	bnz	copy_data0
   123                           
   124                           ; Clear objects allocated to COMRAM (2 bytes)
   125  0001B6  6A35               	clrf	(__pbssCOMRAM+1)& (0+255),c
   126  0001B8  6A34               	clrf	__pbssCOMRAM& (0+255),c
   127  0001BA                     end_of_initialization:
   128                           	opt stack 0
   129  0001BA                     __end_of__initialization:
   130                           	opt stack 0
   131  0001BA  9037               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   132  0001BC  9237               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   133  0001BE  0100               	movlb	0
   134  0001C0  EFF9  F000         	goto	_main	;jump to C main() function
   135                           tblptru	equ	0xFF8
   136                           tblptrh	equ	0xFF7
   137                           tblptrl	equ	0xFF6
   138                           tablat	equ	0xFF5
   139                           postinc0	equ	0xFEE
   140                           postdec1	equ	0xFE5
   141                           fsr1l	equ	0xFE1
   142                           
   143                           	psect	bssCOMRAM
   144  000034                     __pbssCOMRAM:
   145                           	opt stack 0
   146  000034                     _stringC:
   147                           	opt stack 0
   148  000034                     	ds	2
   149                           tblptru	equ	0xFF8
   150                           tblptrh	equ	0xFF7
   151                           tblptrl	equ	0xFF6
   152                           tablat	equ	0xFF5
   153                           postinc0	equ	0xFEE
   154                           postdec1	equ	0xFE5
   155                           fsr1l	equ	0xFE1
   156                           
   157                           	psect	dataCOMRAM
   158  00002C                     __pdataCOMRAM:
   159                           	opt stack 0
   160  00002C                     _mystring:
   161                           	opt stack 0
   162  00002C                     	ds	8
   163                           tblptru	equ	0xFF8
   164                           tblptrh	equ	0xFF7
   165                           tblptrl	equ	0xFF6
   166                           tablat	equ	0xFF5
   167                           postinc0	equ	0xFEE
   168                           postdec1	equ	0xFE5
   169                           fsr1l	equ	0xFE1
   170                           
   171                           	psect	cstackCOMRAM
   172  000001                     __pcstackCOMRAM:
   173                           	opt stack 0
   174  000001                     ??_Hi_ISR:
   175  000001                     
   176                           ; 1 bytes @ 0x0
   177  000001                     	ds	18
   178  000013                     Hi_ISR@i:
   179                           	opt stack 0
   180                           
   181                           ; 2 bytes @ 0x12
   182  000013                     	ds	2
   183  000015                     Hi_ISR@j:
   184                           	opt stack 0
   185                           
   186                           ; 2 bytes @ 0x14
   187  000015                     	ds	2
   188  000017                     ??_Lo_ISR:
   189                           
   190                           ; 1 bytes @ 0x16
   191  000017                     	ds	21
   192  00002C                     tblptru	equ	0xFF8
   193                           tblptrh	equ	0xFF7
   194                           tblptrl	equ	0xFF6
   195                           tablat	equ	0xFF5
   196                           postinc0	equ	0xFEE
   197                           postdec1	equ	0xFE5
   198                           fsr1l	equ	0xFE1
   199                           
   200                           ; 1 bytes @ 0x2B
   201 ;;
   202 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   203 ;;
   204 ;; *************** function _main *****************
   205 ;; Defined at:
   206 ;;		line 74 in file "newmain.c"
   207 ;; Parameters:    Size  Location     Type
   208 ;;		None
   209 ;; Auto vars:     Size  Location     Type
   210 ;;		None
   211 ;; Return value:  Size  Location     Type
   212 ;;                  1    wreg      void 
   213 ;; Registers used:
   214 ;;		wreg, status,2, cstack
   215 ;; Tracked objects:
   216 ;;		On entry : 0/0
   217 ;;		On exit  : 0/0
   218 ;;		Unchanged: 0/0
   219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   220 ;;      Params:         0       0       0       0       0       0       0
   221 ;;      Locals:         0       0       0       0       0       0       0
   222 ;;      Temps:          0       0       0       0       0       0       0
   223 ;;      Totals:         0       0       0       0       0       0       0
   224 ;;Total ram usage:        0 bytes
   225 ;; Hardware stack levels required when called:    4
   226 ;; This function calls:
   227 ;;		_ISR_Init
   228 ;;		_MyusartRead
   229 ;;		_Myusartinit
   230 ;;		_Myusartwrite
   231 ;; This function is called by:
   232 ;;		Startup code after reset
   233 ;; This function uses a non-reentrant model
   234 ;;
   235                           
   236                           	psect	text0
   237  0001F2                     __ptext0:
   238                           	opt stack 0
   239  0001F2                     _main:
   240                           	opt stack 27
   241                           
   242                           ;newmain.c: 75: Myusartinit();
   243                           
   244                           ;incstack = 0
   245  0001F2  ECE2  F000         	call	_Myusartinit	;wreg free
   246                           
   247                           ;newmain.c: 76: ISR_Init();
   248  0001F6  EC0B  F001         	call	_ISR_Init	;wreg free
   249  0001FA                     
   250                           ;newmain.c: 79: MyusartRead();
   251  0001FA  EC12  F001         	call	_MyusartRead	;wreg free
   252                           
   253                           ;newmain.c: 80: if( global != '\0' )
   254  0001FE  5036               	movf	_global,w,c
   255  000200  B4D8               	btfsc	status,2,c
   256  000202  D7FB               	goto	l51
   257                           
   258                           ;newmain.c: 81: {
   259                           ;newmain.c: 82: Myusartwrite();
   260  000204  EC0F  F001         	call	_Myusartwrite	;wreg free
   261                           
   262                           ;newmain.c: 83: global = '\0';
   263  000208  0E00               	movlw	0
   264  00020A  6E36               	movwf	_global,c
   265  00020C  D7F6               	goto	l51
   266  00020E                     __end_of_main:
   267                           	opt stack 0
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           postdec1	equ	0xFE5
   274                           fsr1l	equ	0xFE1
   275                           status	equ	0xFD8
   276                           
   277 ;; *************** function _Myusartwrite *****************
   278 ;; Defined at:
   279 ;;		line 104 in file "newmain.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		None
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   293 ;;      Params:         0       0       0       0       0       0       0
   294 ;;      Locals:         0       0       0       0       0       0       0
   295 ;;      Temps:          0       0       0       0       0       0       0
   296 ;;      Totals:         0       0       0       0       0       0       0
   297 ;;Total ram usage:        0 bytes
   298 ;; Hardware stack levels used:    1
   299 ;; Hardware stack levels required when called:    3
   300 ;; This function calls:
   301 ;;		Nothing
   302 ;; This function is called by:
   303 ;;		_main
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           	psect	text1
   308  00021E                     __ptext1:
   309                           	opt stack 0
   310  00021E                     _Myusartwrite:
   311                           	opt stack 27
   312                           
   313                           ;newmain.c: 106: TXREG = global;
   314                           
   315                           ;incstack = 0
   316  00021E  C036  FFAD         	movff	_global,4013	;volatile
   317                           
   318                           ;newmain.c: 107: return ;
   319  000222  0012               	return		;funcret
   320  000224                     __end_of_Myusartwrite:
   321                           	opt stack 0
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           postdec1	equ	0xFE5
   328                           fsr1l	equ	0xFE1
   329                           status	equ	0xFD8
   330                           
   331 ;; *************** function _Myusartinit *****************
   332 ;; Defined at:
   333 ;;		line 109 in file "newmain.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;		None
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg, status,2
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   347 ;;      Params:         0       0       0       0       0       0       0
   348 ;;      Locals:         0       0       0       0       0       0       0
   349 ;;      Temps:          0       0       0       0       0       0       0
   350 ;;      Totals:         0       0       0       0       0       0       0
   351 ;;Total ram usage:        0 bytes
   352 ;; Hardware stack levels used:    1
   353 ;; Hardware stack levels required when called:    3
   354 ;; This function calls:
   355 ;;		Nothing
   356 ;; This function is called by:
   357 ;;		_main
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           	psect	text2
   362  0001C4                     __ptext2:
   363                           	opt stack 0
   364  0001C4                     _Myusartinit:
   365                           	opt stack 27
   366                           
   367                           ;newmain.c: 112: TRISCbits.TRISC6 = 1;
   368                           
   369                           ;incstack = 0
   370  0001C4  8C94               	bsf	3988,6,c	;volatile
   371                           
   372                           ;newmain.c: 113: TRISCbits.TRISC7 = 1;
   373  0001C6  8E94               	bsf	3988,7,c	;volatile
   374                           
   375                           ;newmain.c: 114: TRISDbits.RD0 = 0;
   376  0001C8  9095               	bcf	3989,0,c	;volatile
   377                           
   378                           ;newmain.c: 115: TRISDbits.RD1 = 0;
   379  0001CA  9295               	bcf	3989,1,c	;volatile
   380                           
   381                           ;newmain.c: 116: OSCCONbits.IRCF = 0b110;
   382  0001CC  50D3               	movf	4051,w,c	;volatile
   383  0001CE  0B8F               	andlw	-113
   384  0001D0  0960               	iorlw	96
   385  0001D2  6ED3               	movwf	4051,c	;volatile
   386                           
   387                           ;newmain.c: 127: BAUDCONbits.BRG16 = 0 ;
   388  0001D4  96B8               	bcf	4024,3,c	;volatile
   389                           
   390                           ;newmain.c: 128: TXSTAbits.BRGH = 1;
   391  0001D6  84AC               	bsf	4012,2,c	;volatile
   392                           
   393                           ;newmain.c: 129: SPBRG = 25;
   394  0001D8  0E19               	movlw	25
   395  0001DA  6EAF               	movwf	4015,c	;volatile
   396                           
   397                           ;newmain.c: 132: TXSTAbits.SYNC = 0;
   398  0001DC  98AC               	bcf	4012,4,c	;volatile
   399                           
   400                           ;newmain.c: 133: RCSTAbits.SPEN = 1;
   401  0001DE  8EAB               	bsf	4011,7,c	;volatile
   402                           
   403                           ;newmain.c: 138: PIR1bits.TXIF = 1;
   404  0001E0  889E               	bsf	3998,4,c	;volatile
   405                           
   406                           ;newmain.c: 139: PIR1bits.RCIF = 0;
   407  0001E2  9A9E               	bcf	3998,5,c	;volatile
   408                           
   409                           ;newmain.c: 140: TXSTAbits.TXEN = 1;
   410  0001E4  8AAC               	bsf	4012,5,c	;volatile
   411                           
   412                           ;newmain.c: 141: RCSTAbits.CREN = 1;
   413  0001E6  88AB               	bsf	4011,4,c	;volatile
   414                           
   415                           ;newmain.c: 143: PIE1bits.TXIE = 1;
   416  0001E8  889D               	bsf	3997,4,c	;volatile
   417                           
   418                           ;newmain.c: 144: IPR1bits.TXIP = 1;
   419  0001EA  889F               	bsf	3999,4,c	;volatile
   420                           
   421                           ;newmain.c: 145: PIE1bits.RCIE = 1;
   422  0001EC  8A9D               	bsf	3997,5,c	;volatile
   423                           
   424                           ;newmain.c: 146: IPR1bits.RCIP = 1;
   425  0001EE  8A9F               	bsf	3999,5,c	;volatile
   426  0001F0  0012               	return	
   427  0001F2                     __end_of_Myusartinit:
   428                           	opt stack 0
   429                           tblptru	equ	0xFF8
   430                           tblptrh	equ	0xFF7
   431                           tblptrl	equ	0xFF6
   432                           tablat	equ	0xFF5
   433                           postinc0	equ	0xFEE
   434                           postdec1	equ	0xFE5
   435                           fsr1l	equ	0xFE1
   436                           status	equ	0xFD8
   437                           
   438 ;; *************** function _MyusartRead *****************
   439 ;; Defined at:
   440 ;;		line 98 in file "newmain.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		None
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   454 ;;      Params:         0       0       0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels used:    1
   460 ;; Hardware stack levels required when called:    3
   461 ;; This function calls:
   462 ;;		Nothing
   463 ;; This function is called by:
   464 ;;		_main
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           	psect	text3
   469  000224                     __ptext3:
   470                           	opt stack 0
   471  000224                     _MyusartRead:
   472                           	opt stack 27
   473                           
   474                           ;newmain.c: 100: global = RCREG;
   475                           
   476                           ;incstack = 0
   477  000224  CFAE F036          	movff	4014,_global	;volatile
   478                           
   479                           ;newmain.c: 102: return ;
   480  000228  0012               	return		;funcret
   481  00022A                     __end_of_MyusartRead:
   482                           	opt stack 0
   483                           tblptru	equ	0xFF8
   484                           tblptrh	equ	0xFF7
   485                           tblptrl	equ	0xFF6
   486                           tablat	equ	0xFF5
   487                           postinc0	equ	0xFEE
   488                           postdec1	equ	0xFE5
   489                           fsr1l	equ	0xFE1
   490                           status	equ	0xFD8
   491                           
   492 ;; *************** function _ISR_Init *****************
   493 ;; Defined at:
   494 ;;		line 91 in file "newmain.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		None
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   508 ;;      Params:         0       0       0       0       0       0       0
   509 ;;      Locals:         0       0       0       0       0       0       0
   510 ;;      Temps:          0       0       0       0       0       0       0
   511 ;;      Totals:         0       0       0       0       0       0       0
   512 ;;Total ram usage:        0 bytes
   513 ;; Hardware stack levels used:    1
   514 ;; Hardware stack levels required when called:    3
   515 ;; This function calls:
   516 ;;		Nothing
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text4
   523  000216                     __ptext4:
   524                           	opt stack 0
   525  000216                     _ISR_Init:
   526                           	opt stack 27
   527                           
   528                           ;newmain.c: 93: RCONbits.IPEN = 1;
   529                           
   530                           ;incstack = 0
   531  000216  8ED0               	bsf	4048,7,c	;volatile
   532                           
   533                           ;newmain.c: 94: INTCONbits.GIEH = 1;
   534  000218  8EF2               	bsf	intcon,7,c	;volatile
   535                           
   536                           ;newmain.c: 95: INTCONbits.GIEL = 1;
   537  00021A  8CF2               	bsf	intcon,6,c	;volatile
   538                           
   539                           ;newmain.c: 96: return ;
   540  00021C  0012               	return		;funcret
   541  00021E                     __end_of_ISR_Init:
   542                           	opt stack 0
   543                           tblptru	equ	0xFF8
   544                           tblptrh	equ	0xFF7
   545                           tblptrl	equ	0xFF6
   546                           tablat	equ	0xFF5
   547                           intcon	equ	0xFF2
   548                           postinc0	equ	0xFEE
   549                           postdec1	equ	0xFE5
   550                           fsr1l	equ	0xFE1
   551                           status	equ	0xFD8
   552                           
   553 ;; *************** function _Lo_ISR *****************
   554 ;; Defined at:
   555 ;;		line 189 in file "newmain.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		None
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   569 ;;      Params:         0       0       0       0       0       0       0
   570 ;;      Locals:         0       0       0       0       0       0       0
   571 ;;      Temps:         21       0       0       0       0       0       0
   572 ;;      Totals:        21       0       0       0       0       0       0
   573 ;;Total ram usage:       21 bytes
   574 ;; Hardware stack levels used:    1
   575 ;; Hardware stack levels required when called:    2
   576 ;; This function calls:
   577 ;;		Nothing
   578 ;; This function is called by:
   579 ;;		Interrupt level 1
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	intcodelo
   584  000018                     __pintcodelo:
   585                           	opt stack 0
   586  000018                     _Lo_ISR:
   587                           	opt stack 27
   588                           
   589                           ;incstack = 0
   590  000018  8037               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   591  00001A  CFD8 F017          	movff	status,??_Lo_ISR
   592  00001E  CFE8 F018          	movff	wreg,??_Lo_ISR+1
   593  000022  CFE0 F019          	movff	bsr,??_Lo_ISR+2
   594  000026  CFFA F01A          	movff	pclath,??_Lo_ISR+3
   595  00002A  CFFB F01B          	movff	pclatu,??_Lo_ISR+4
   596  00002E  CFE9 F01C          	movff	fsr0l,??_Lo_ISR+5
   597  000032  CFEA F01D          	movff	fsr0h,??_Lo_ISR+6
   598  000036  CFE1 F01E          	movff	fsr1l,??_Lo_ISR+7
   599  00003A  CFE2 F01F          	movff	fsr1h,??_Lo_ISR+8
   600  00003E  CFD9 F020          	movff	fsr2l,??_Lo_ISR+9
   601  000042  CFDA F021          	movff	fsr2h,??_Lo_ISR+10
   602  000046  CFF3 F022          	movff	prodl,??_Lo_ISR+11
   603  00004A  CFF4 F023          	movff	prodh,??_Lo_ISR+12
   604  00004E  CFF6 F024          	movff	tblptrl,??_Lo_ISR+13
   605  000052  CFF7 F025          	movff	tblptrh,??_Lo_ISR+14
   606  000056  CFF8 F026          	movff	tblptru,??_Lo_ISR+15
   607  00005A  CFF5 F027          	movff	tablat,??_Lo_ISR+16
   608  00005E  C037  F028         	movff	btemp,??_Lo_ISR+17
   609  000062  C038  F029         	movff	btemp+1,??_Lo_ISR+18
   610  000066  C039  F02A         	movff	btemp+2,??_Lo_ISR+19
   611  00006A  C03A  F02B         	movff	btemp+3,??_Lo_ISR+20
   612                           
   613                           ;newmain.c: 192: return;
   614  00006E  C02B  F03A         	movff	??_Lo_ISR+20,btemp+3
   615  000072  C02A  F039         	movff	??_Lo_ISR+19,btemp+2
   616  000076  C029  F038         	movff	??_Lo_ISR+18,btemp+1
   617  00007A  C028  F037         	movff	??_Lo_ISR+17,btemp
   618  00007E  C027  FFF5         	movff	??_Lo_ISR+16,tablat
   619  000082  C026  FFF8         	movff	??_Lo_ISR+15,tblptru
   620  000086  C025  FFF7         	movff	??_Lo_ISR+14,tblptrh
   621  00008A  C024  FFF6         	movff	??_Lo_ISR+13,tblptrl
   622  00008E  C023  FFF4         	movff	??_Lo_ISR+12,prodh
   623  000092  C022  FFF3         	movff	??_Lo_ISR+11,prodl
   624  000096  C021  FFDA         	movff	??_Lo_ISR+10,fsr2h
   625  00009A  C020  FFD9         	movff	??_Lo_ISR+9,fsr2l
   626  00009E  C01F  FFE2         	movff	??_Lo_ISR+8,fsr1h
   627  0000A2  C01E  FFE1         	movff	??_Lo_ISR+7,fsr1l
   628  0000A6  C01D  FFEA         	movff	??_Lo_ISR+6,fsr0h
   629  0000AA  C01C  FFE9         	movff	??_Lo_ISR+5,fsr0l
   630  0000AE  C01B  FFFB         	movff	??_Lo_ISR+4,pclatu
   631  0000B2  C01A  FFFA         	movff	??_Lo_ISR+3,pclath
   632  0000B6  C019  FFE0         	movff	??_Lo_ISR+2,bsr
   633  0000BA  C018  FFE8         	movff	??_Lo_ISR+1,wreg
   634  0000BE  C017  FFD8         	movff	??_Lo_ISR,status
   635  0000C2  9037               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   636  0000C4  0010               	retfie	
   637  0000C6                     __end_of_Lo_ISR:
   638                           	opt stack 0
   639                           pclatu	equ	0xFFB
   640                           pclath	equ	0xFFA
   641                           tblptru	equ	0xFF8
   642                           tblptrh	equ	0xFF7
   643                           tblptrl	equ	0xFF6
   644                           tablat	equ	0xFF5
   645                           prodh	equ	0xFF4
   646                           prodl	equ	0xFF3
   647                           intcon	equ	0xFF2
   648                           postinc0	equ	0xFEE
   649                           fsr0h	equ	0xFEA
   650                           fsr0l	equ	0xFE9
   651                           wreg	equ	0xFE8
   652                           postdec1	equ	0xFE5
   653                           fsr1h	equ	0xFE2
   654                           fsr1l	equ	0xFE1
   655                           bsr	equ	0xFE0
   656                           fsr2h	equ	0xFDA
   657                           fsr2l	equ	0xFD9
   658                           status	equ	0xFD8
   659                           
   660 ;; *************** function _Hi_ISR *****************
   661 ;; Defined at:
   662 ;;		line 153 in file "newmain.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  j               2   20[COMRAM] int 
   667 ;;  i               2   18[COMRAM] int 
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      void 
   670 ;; Registers used:
   671 ;;		wreg, status,2, status,0, cstack
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   677 ;;      Params:         0       0       0       0       0       0       0
   678 ;;      Locals:         4       0       0       0       0       0       0
   679 ;;      Temps:         18       0       0       0       0       0       0
   680 ;;      Totals:        22       0       0       0       0       0       0
   681 ;;Total ram usage:       22 bytes
   682 ;; Hardware stack levels used:    1
   683 ;; Hardware stack levels required when called:    1
   684 ;; This function calls:
   685 ;;		i2_MyusartRead
   686 ;;		i2_Myusartwrite
   687 ;; This function is called by:
   688 ;;		Interrupt level 2
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	intcode
   693  000008                     __pintcode:
   694                           	opt stack 0
   695  000008                     _Hi_ISR:
   696                           	opt stack 27
   697                           
   698                           ;incstack = 0
   699  000008  8237               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   700  00000A  ED65  F000         	call	int_func,f	;refresh shadow registers
   701                           pclatu	equ	0xFFB
   702                           pclath	equ	0xFFA
   703                           tblptru	equ	0xFF8
   704                           tblptrh	equ	0xFF7
   705                           tblptrl	equ	0xFF6
   706                           tablat	equ	0xFF5
   707                           prodh	equ	0xFF4
   708                           prodl	equ	0xFF3
   709                           intcon	equ	0xFF2
   710                           postinc0	equ	0xFEE
   711                           fsr0h	equ	0xFEA
   712                           fsr0l	equ	0xFE9
   713                           wreg	equ	0xFE8
   714                           postdec1	equ	0xFE5
   715                           fsr1h	equ	0xFE2
   716                           fsr1l	equ	0xFE1
   717                           bsr	equ	0xFE0
   718                           fsr2h	equ	0xFDA
   719                           fsr2l	equ	0xFD9
   720                           status	equ	0xFD8
   721                           
   722                           	psect	intcode_body
   723  0000CA                     __pintcode_body:
   724                           	opt stack 27
   725  0000CA                     int_func:
   726                           	opt stack 27
   727  0000CA  0006               	pop		; remove dummy address from shadow register refresh
   728  0000CC  CFFA F001          	movff	pclath,??_Hi_ISR
   729  0000D0  CFFB F002          	movff	pclatu,??_Hi_ISR+1
   730  0000D4  CFE9 F003          	movff	fsr0l,??_Hi_ISR+2
   731  0000D8  CFEA F004          	movff	fsr0h,??_Hi_ISR+3
   732  0000DC  CFE1 F005          	movff	fsr1l,??_Hi_ISR+4
   733  0000E0  CFE2 F006          	movff	fsr1h,??_Hi_ISR+5
   734  0000E4  CFD9 F007          	movff	fsr2l,??_Hi_ISR+6
   735  0000E8  CFDA F008          	movff	fsr2h,??_Hi_ISR+7
   736  0000EC  CFF3 F009          	movff	prodl,??_Hi_ISR+8
   737  0000F0  CFF4 F00A          	movff	prodh,??_Hi_ISR+9
   738  0000F4  CFF6 F00B          	movff	tblptrl,??_Hi_ISR+10
   739  0000F8  CFF7 F00C          	movff	tblptrh,??_Hi_ISR+11
   740  0000FC  CFF8 F00D          	movff	tblptru,??_Hi_ISR+12
   741  000100  CFF5 F00E          	movff	tablat,??_Hi_ISR+13
   742  000104  C037  F00F         	movff	btemp,??_Hi_ISR+14
   743  000108  C038  F010         	movff	btemp+1,??_Hi_ISR+15
   744  00010C  C039  F011         	movff	btemp+2,??_Hi_ISR+16
   745  000110  C03A  F012         	movff	btemp+3,??_Hi_ISR+17
   746                           
   747                           ;newmain.c: 160: int i = 10 , j = 10 ;
   748  000114  0E00               	movlw	0
   749  000116  6E14               	movwf	Hi_ISR@i+1,c
   750  000118  0E0A               	movlw	10
   751  00011A  6E13               	movwf	Hi_ISR@i,c
   752  00011C  0E00               	movlw	0
   753  00011E  6E16               	movwf	Hi_ISR@j+1,c
   754  000120  0E0A               	movlw	10
   755  000122  6E15               	movwf	Hi_ISR@j,c
   756                           
   757                           ;newmain.c: 162: if(RCIF)
   758  000124  AA9E               	btfss	3998,5,c	;volatile
   759  000126  D011               	goto	i2l75
   760                           
   761                           ;newmain.c: 163: {
   762                           ;newmain.c: 164: if(RCSTAbits.OERR == 1)
   763  000128  50AB               	movf	4011,w,c	;volatile
   764                           
   765                           ;newmain.c: 172: }
   766                           ;newmain.c: 173: MyusartRead();
   767                           
   768                           ;newmain.c: 165: {
   769  00012A  EC18  F001         	call	i2_MyusartRead	;wreg free
   770                           
   771                           ;newmain.c: 174: Myusartwrite();
   772  00012E  EC15  F001         	call	i2_Myusartwrite	;wreg free
   773                           
   774                           ;newmain.c: 175: if(global == 'b') {
   775  000132  0E62               	movlw	98
   776  000134  1836               	xorwf	_global,w,c
   777  000136  A4D8               	btfss	status,2,c
   778  000138  D002               	goto	i2l74
   779                           
   780                           ;newmain.c: 176: LATDbits.LATD0 = 1;
   781  00013A  808C               	bsf	3980,0,c	;volatile
   782                           
   783                           ;newmain.c: 177: LATDbits.LATD1 = 0;
   784  00013C  928C               	bcf	3980,1,c	;volatile
   785  00013E                     i2l74:
   786                           
   787                           ;newmain.c: 178: }
   788                           ;newmain.c: 179: if(global == 'c') {
   789  00013E  0E63               	movlw	99
   790  000140  1836               	xorwf	_global,w,c
   791  000142  A4D8               	btfss	status,2,c
   792  000144  D002               	goto	i2l75
   793                           
   794                           ;newmain.c: 180: LATDbits.LATD0 = 0;
   795  000146  908C               	bcf	3980,0,c	;volatile
   796                           
   797                           ;newmain.c: 181: LATDbits.LATD1 = 1;
   798  000148  828C               	bsf	3980,1,c	;volatile
   799  00014A                     i2l75:
   800                           
   801                           ;newmain.c: 182: }
   802                           ;newmain.c: 185: }
   803                           ;newmain.c: 187: return ;
   804  00014A  C012  F03A         	movff	??_Hi_ISR+17,btemp+3
   805  00014E  C011  F039         	movff	??_Hi_ISR+16,btemp+2
   806  000152  C010  F038         	movff	??_Hi_ISR+15,btemp+1
   807  000156  C00F  F037         	movff	??_Hi_ISR+14,btemp
   808  00015A  C00E  FFF5         	movff	??_Hi_ISR+13,tablat
   809  00015E  C00D  FFF8         	movff	??_Hi_ISR+12,tblptru
   810  000162  C00C  FFF7         	movff	??_Hi_ISR+11,tblptrh
   811  000166  C00B  FFF6         	movff	??_Hi_ISR+10,tblptrl
   812  00016A  C00A  FFF4         	movff	??_Hi_ISR+9,prodh
   813  00016E  C009  FFF3         	movff	??_Hi_ISR+8,prodl
   814  000172  C008  FFDA         	movff	??_Hi_ISR+7,fsr2h
   815  000176  C007  FFD9         	movff	??_Hi_ISR+6,fsr2l
   816  00017A  C006  FFE2         	movff	??_Hi_ISR+5,fsr1h
   817  00017E  C005  FFE1         	movff	??_Hi_ISR+4,fsr1l
   818  000182  C004  FFEA         	movff	??_Hi_ISR+3,fsr0h
   819  000186  C003  FFE9         	movff	??_Hi_ISR+2,fsr0l
   820  00018A  C002  FFFB         	movff	??_Hi_ISR+1,pclatu
   821  00018E  C001  FFFA         	movff	??_Hi_ISR,pclath
   822  000192  9237               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   823  000194  0011               	retfie		f
   824  000196                     __end_of_Hi_ISR:
   825                           	opt stack 0
   826                           pclatu	equ	0xFFB
   827                           pclath	equ	0xFFA
   828                           tblptru	equ	0xFF8
   829                           tblptrh	equ	0xFF7
   830                           tblptrl	equ	0xFF6
   831                           tablat	equ	0xFF5
   832                           prodh	equ	0xFF4
   833                           prodl	equ	0xFF3
   834                           intcon	equ	0xFF2
   835                           postinc0	equ	0xFEE
   836                           fsr0h	equ	0xFEA
   837                           fsr0l	equ	0xFE9
   838                           wreg	equ	0xFE8
   839                           postdec1	equ	0xFE5
   840                           fsr1h	equ	0xFE2
   841                           fsr1l	equ	0xFE1
   842                           bsr	equ	0xFE0
   843                           fsr2h	equ	0xFDA
   844                           fsr2l	equ	0xFD9
   845                           status	equ	0xFD8
   846                           
   847 ;; *************** function i2_Myusartwrite *****************
   848 ;; Defined at:
   849 ;;		line 104 in file "newmain.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		None
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   863 ;;      Params:         0       0       0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0       0       0
   866 ;;      Totals:         0       0       0       0       0       0       0
   867 ;;Total ram usage:        0 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		_Hi_ISR
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text7
   877  00022A                     __ptext7:
   878                           	opt stack 0
   879  00022A                     i2_Myusartwrite:
   880                           	opt stack 27
   881                           
   882                           ;newmain.c: 106: TXREG = global;
   883                           
   884                           ;incstack = 0
   885  00022A  C036  FFAD         	movff	_global,4013	;volatile
   886                           
   887                           ;newmain.c: 107: return ;
   888  00022E  0012               	return		;funcret
   889  000230                     __end_ofi2_Myusartwrite:
   890                           	opt stack 0
   891                           pclatu	equ	0xFFB
   892                           pclath	equ	0xFFA
   893                           tblptru	equ	0xFF8
   894                           tblptrh	equ	0xFF7
   895                           tblptrl	equ	0xFF6
   896                           tablat	equ	0xFF5
   897                           prodh	equ	0xFF4
   898                           prodl	equ	0xFF3
   899                           intcon	equ	0xFF2
   900                           postinc0	equ	0xFEE
   901                           fsr0h	equ	0xFEA
   902                           fsr0l	equ	0xFE9
   903                           wreg	equ	0xFE8
   904                           postdec1	equ	0xFE5
   905                           fsr1h	equ	0xFE2
   906                           fsr1l	equ	0xFE1
   907                           bsr	equ	0xFE0
   908                           fsr2h	equ	0xFDA
   909                           fsr2l	equ	0xFD9
   910                           status	equ	0xFD8
   911                           
   912 ;; *************** function i2_MyusartRead *****************
   913 ;; Defined at:
   914 ;;		line 98 in file "newmain.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;		None
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		None
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   928 ;;      Params:         0       0       0       0       0       0       0
   929 ;;      Locals:         0       0       0       0       0       0       0
   930 ;;      Temps:          0       0       0       0       0       0       0
   931 ;;      Totals:         0       0       0       0       0       0       0
   932 ;;Total ram usage:        0 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_Hi_ISR
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text8
   942  000230                     __ptext8:
   943                           	opt stack 0
   944  000230                     i2_MyusartRead:
   945                           	opt stack 27
   946                           
   947                           ;newmain.c: 100: global = RCREG;
   948                           
   949                           ;incstack = 0
   950  000230  CFAE F036          	movff	4014,_global	;volatile
   951                           
   952                           ;newmain.c: 102: return ;
   953  000234  0012               	return		;funcret
   954  000236                     __end_ofi2_MyusartRead:
   955                           	opt stack 0
   956  0000                     pclatu	equ	0xFFB
   957                           pclath	equ	0xFFA
   958                           tblptru	equ	0xFF8
   959                           tblptrh	equ	0xFF7
   960                           tblptrl	equ	0xFF6
   961                           tablat	equ	0xFF5
   962                           prodh	equ	0xFF4
   963                           prodl	equ	0xFF3
   964                           intcon	equ	0xFF2
   965                           postinc0	equ	0xFEE
   966                           fsr0h	equ	0xFEA
   967                           fsr0l	equ	0xFE9
   968                           wreg	equ	0xFE8
   969                           postdec1	equ	0xFE5
   970                           fsr1h	equ	0xFE2
   971                           fsr1l	equ	0xFE1
   972                           bsr	equ	0xFE0
   973                           fsr2h	equ	0xFDA
   974                           fsr2l	equ	0xFD9
   975                           status	equ	0xFD8
   976                           pclatu	equ	0xFFB
   977                           pclath	equ	0xFFA
   978                           tblptru	equ	0xFF8
   979                           tblptrh	equ	0xFF7
   980                           tblptrl	equ	0xFF6
   981                           tablat	equ	0xFF5
   982                           prodh	equ	0xFF4
   983                           prodl	equ	0xFF3
   984                           intcon	equ	0xFF2
   985                           postinc0	equ	0xFEE
   986                           fsr0h	equ	0xFEA
   987                           fsr0l	equ	0xFE9
   988                           wreg	equ	0xFE8
   989                           postdec1	equ	0xFE5
   990                           fsr1h	equ	0xFE2
   991                           fsr1l	equ	0xFE1
   992                           bsr	equ	0xFE0
   993                           fsr2h	equ	0xFDA
   994                           fsr2l	equ	0xFD9
   995                           status	equ	0xFD8
   996                           
   997                           	psect	rparam
   998  0000                     pclatu	equ	0xFFB
   999                           pclath	equ	0xFFA
  1000                           tblptru	equ	0xFF8
  1001                           tblptrh	equ	0xFF7
  1002                           tblptrl	equ	0xFF6
  1003                           tablat	equ	0xFF5
  1004                           prodh	equ	0xFF4
  1005                           prodl	equ	0xFF3
  1006                           intcon	equ	0xFF2
  1007                           postinc0	equ	0xFEE
  1008                           fsr0h	equ	0xFEA
  1009                           fsr0l	equ	0xFE9
  1010                           wreg	equ	0xFE8
  1011                           postdec1	equ	0xFE5
  1012                           fsr1h	equ	0xFE2
  1013                           fsr1l	equ	0xFE1
  1014                           bsr	equ	0xFE0
  1015                           fsr2h	equ	0xFDA
  1016                           fsr2l	equ	0xFD9
  1017                           status	equ	0xFD8
  1018                           
  1019                           	psect	temp
  1020  000037                     btemp:
  1021                           	opt stack 0
  1022  000037                     	ds	1
  1023  0000                     int$flags	set	btemp
  1024  0000                     wtemp6	set	btemp+1
  1025                           pclatu	equ	0xFFB
  1026                           pclath	equ	0xFFA
  1027                           tblptru	equ	0xFF8
  1028                           tblptrh	equ	0xFF7
  1029                           tblptrl	equ	0xFF6
  1030                           tablat	equ	0xFF5
  1031                           prodh	equ	0xFF4
  1032                           prodl	equ	0xFF3
  1033                           intcon	equ	0xFF2
  1034                           postinc0	equ	0xFEE
  1035                           fsr0h	equ	0xFEA
  1036                           fsr0l	equ	0xFE9
  1037                           wreg	equ	0xFE8
  1038                           postdec1	equ	0xFE5
  1039                           fsr1h	equ	0xFE2
  1040                           fsr1l	equ	0xFE1
  1041                           bsr	equ	0xFE0
  1042                           fsr2h	equ	0xFDA
  1043                           fsr2l	equ	0xFD9
  1044                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     43      54
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Lo_ISR in COMRAM

    None.

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _ISR_Init
                        _MyusartRead
                        _Myusartinit
                       _Myusartwrite
 ---------------------------------------------------------------------------------
 (1) _Myusartwrite                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Myusartinit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MyusartRead                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ISR_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Lo_ISR                                              21    21      0       0
                                             22 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Hi_ISR                                              22    22      0       0
                                              0 COMRAM    22    22      0
                      i2_MyusartRead
                     i2_Myusartwrite
 ---------------------------------------------------------------------------------
 (4) i2_Myusartwrite                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) i2_MyusartRead                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ISR_Init
   _MyusartRead
   _Myusartinit
   _Myusartwrite

 _Lo_ISR (ROOT)

 _Hi_ISR (ROOT)
   i2_MyusartRead
   i2_Myusartwrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2B      36       1       42.9%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36      14        0.0%
DATA                 0      0      36      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Thu Dec 14 18:08:13 2017

 __size_ofi2_MyusartRead 0006                       l51 01FA             _Myusartwrite 021E  
                     bsr 000FE0              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  __size_ofi2_Myusartwrite 0006  
                    wreg 000FE8             __CFG_IESO$ON 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _RCIF 007CF5                     i2l74 013E  
                   i2l75 014A             __CFG_WDTPS$1 000000                     _main 01F2  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0037                     prodh 000FF4                     prodl 000FF3  
                   start 00C6            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0001                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _TXREG 000FAD            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000         __end_of_ISR_Init 021E            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000            i2_MyusartRead 0230                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8                    wtemp6 0038  
         __CFG_PBADEN$ON 000000          __initialization 0196             __end_of_main 020E  
                 ??_main 002C            __activetblptr 000000           ?i2_MyusartRead 0001  
                 _Hi_ISR 0008                   _Lo_ISR 0018           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000                   _global 0036           i2_Myusartwrite 022A  
           __pdataCOMRAM 002C                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0080  __end_of__initialization 01BA  
          ___rparam_used 000001           __pcstackCOMRAM 0001                ?_ISR_Init 0001  
 __end_ofi2_Myusartwrite 0230          ??i2_MyusartRead 0001            ??_MyusartRead 002C  
          ??_Myusartinit 002C               __pnvCOMRAM 0036                  ?_Hi_ISR 0001  
                ?_Lo_ISR 0001               ??_ISR_Init 002C          ?i2_Myusartwrite 0001  
                Hi_ISR@i 0013                  Hi_ISR@j 0015      __end_of_MyusartRead 022A  
    __end_of_Myusartinit 01F2          __size_of_Hi_ISR 018E          __size_of_Lo_ISR 00AE  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0196  
                __ramtop 0600                  __ptext0 01F2                  __ptext1 021E  
                __ptext2 01C4                  __ptext3 0224                  __ptext4 0216  
                __ptext7 022A                  __ptext8 0230                  _stringC 0034  
         __pintcode_body 00CA     end_of_initialization 01BA                  int_func 00CA  
              _RCSTAbits 000FAB                  postdec1 000FE5                  postinc0 000FEE  
              _TRISCbits 000F94                _TRISDbits 000F95              _MyusartRead 0224  
            _Myusartinit 01C4                _TXSTAbits 000FAC           __end_of_Hi_ISR 0196  
         __end_of_Lo_ISR 00C6            ?_Myusartwrite 0001        __size_of_ISR_Init 0008  
            _BAUDCONbits 000FB8            __pidataCOMRAM 020E      start_initialization 0196  
       __CFG_OSC$INTIO67 000000                 ??_Hi_ISR 0001                 ??_Lo_ISR 0017  
       ??i2_Myusartwrite 0001           ??_Myusartwrite 002C         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0034    __end_ofi2_MyusartRead 0236        __CFG_CCP2MX$PORTC 000000  
              __pintcode 0008              __pintcodelo 0018                 _LATDbits 000F8C  
               _IPR1bits 000F9F                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
               _RCONbits 000FD0                 _ISR_Init 0216             ?_MyusartRead 0001  
           ?_Myusartinit 0001                copy_data0 01AA     __end_of_Myusartwrite 0224  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
          __size_of_main 001C                 int$flags 0037                 _mystring 002C  
             _INTCONbits 000FF2                 intlevel1 0000                 intlevel2 0000  
             _OSCCONbits 000FD3    __size_of_Myusartwrite 0006     __size_of_MyusartRead 0006  
   __size_of_Myusartinit 002E  
